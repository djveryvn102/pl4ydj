
	
$(function(){
    $("[data-toggle=popover]").popover({
        html : true,
        content: function() {
          var content = $(this).attr("data-popover-content");
          return $(content).children(".popover-content").html();
        },
        title: function() {
          var title = $(this).attr("data-popover-content");
          return $(title).children(".popover-title").html();
        }
		}), $(document).on("click", ".popover .close", function() {
        $(this).parents(".popover").popover("hide")
    }), $("body").on("click", function(t) {
        $("[data-toggle=popover]").each(function() {
            $(this).is(t.target) || 0 !== $(this).has(t.target).length || 0 !== $(".popover").has(t.target).length || $(this).popover("hide")
        })
    }), $("[data-toggle=popover]").on("hide.bs.popover", function() {
        $("[data-toggle=popover]").removeClass("active")

    });
});
 
 

function load_playlist_tool() {
    $.ajax({
        url: "/ajax/song/load_playlist_tool",
        method: "GET",
        dataType: "json",
        success: function(t) {
            $(".playlist-tool").html(t.html), init_popover(), $(".it-playlist").on("shown.bs.popover", function() {
                $(this).addClass("active");
                var t = $(this).parent().attr("data-song-id");
                $.ajax({
                    url: base_url + "ajax/playlist/list/" + t + "/popover",
                    type: "GET",
                    dataType: "json",
                    success: function(t) {
                        $(".popover-content").hide().html(t.html).fadeIn()
                    }
                })
            })
        }
    })
}

function show_login() {
    $(".modal-content").hide(), $("#modal-login").show()
}

function show_register() {
    $(".modal-content").hide(), load_form_register(), $("#modal-register").show()
}

function load_form_register() {
    $.ajax({
        url: base_url + "ajax/user/form_register",
        type: "GET",
        dataType: "json",
        success: function(t) {
            $("#content-form-register").html(t.html)
        }
    })
}

function show_forgot() {
    $(".modal-content").hide(), $("#modal-forgot").show()
}

function logout() {
    $.ajax({
        url: base_url + "ajax/user/logout",
        method: "GET",
        dataType: "json",
        success: function() {
            window.location.reload()
        }
    })
}

function refresh_captcha(t) {
    $.ajax({
        url: base_url + "ajax/captcha/generate/" + t,
        method: "GET",
        dataType: "json",
        success: function(e) {
            $("#captcha-" + t).html(e.image)
        }
    })
}

function update_playback(t, e) {
    $.cookie("listen-" + t + "-" + e) || $.ajax({
        url: base_url + "ajax/" + t + "/update_playback",
        type: "POST",
        dataType: "json",
        data: {
            id: e
        },
        success: function() {
            var a = new Date,
                s = 5;
            a.setTime(a.getTime() + 60 * s * 2e3), $.cookie("listen-" + t + "-" + e, !0, {
                expires: a,
                path: "/"
            })
        }
    })
}

function like_state(t, e) {
    $.ajax({
        url: base_url + "ajax/" + t + "/like_state/" + e,
        type: "GET",
        dataType: "json",
        success: function(t) {
            $("#like-state").html(t.html)
        }
    })
}

function follow_state(t) {
    $.ajax({
        url: base_url + "ajax/artist/follow_state/" + t,
        type: "GET",
        dataType: "json",
        success: function(t) {
            $("#follow-state").html(t.html)
        }
    })
}

function like(t, e, a) {
    is_login ? ("undefined" == typeof a && (a = "add"), $.ajax({
        url: base_url + "ajax/" + t + "/like",
        type: "POST",
        dataType: "json",
        data: {
            id: e,
            action: a
        },
        success: function(t) {
            $("#like-state").html(t.html), $("#message-content").html(t.message), $("#pop-alert").modal("show"), setTimeout(function() {
                $("#pop-alert").modal("hide")
            }, 1500)
        }
    })) : $("#pop-login").modal("show")
}

function follow(t) {
    is_login ? $.ajax({
        url: base_url + "ajax/artist/follow",
        type: "POST",
        dataType: "json",
        data: {
            id: t
        },
        success: function(t) {
            $("#follow-state").html(t.html), $("#message-content").html(t.message), $("#pop-alert").modal("show")
        }
    }) : $("#pop-login").modal("show")
}

function get_playlist(t, e) {
    var a;
    a = "undefined" != typeof t ? t : song.id;
    var s;
    s = "undefined" != typeof e ? base_url + "ajax/playlist/list/" + a + "/" + e : base_url + "ajax/playlist/list/" + a, $.ajax({
        url: s,
        type: "GET",
        dataType: "json",
        success: function(t) {
            "popover" == e ? $(".popover-content").hide().html(t.html).fadeIn() : ($("#list-playlist").html(t.html), $("#list-playlist").perfectScrollbar())
        }
    })
}

function download_song() {
    $("#message-content").html("The download feature is under maintenance. It will be back soon, sorry for the inconvenience."), $("#pop-alert").modal("show")
}

function add_to_playlist(t, e) {
    $.ajax({
        url: base_url + "ajax/playlist/add_song",
        type: "POST",
        data: {
            playlist_id: t,
            song_id: e
        },
        dataType: "json",
        success: function(e) {
            if ("add" == e.action) {
                $("#btn-playlist-" + t).addClass("btn-active"), $("#popover-btn-playlist-" + t).addClass("active");
                var a = parseInt($("#popover-btn-playlist-" + t).find(".badge").text());
                a += 1, $("#popover-btn-playlist-" + t).find(".badge").text(a)
            } else {
                $("#btn-playlist-" + t).removeClass("btn-active"), $("#popover-btn-playlist-" + t).removeClass("active");
                var a = parseInt($("#popover-btn-playlist-" + t).find(".badge").text());
                a -= 1, $("#popover-btn-playlist-" + t).find(".badge").text(a)
            }
        }
    })
}

function social_share(t, e) {
    var a = 626,
        s = 496,
        o = screen.width / 2 - a / 2,
        i = screen.height / 2 - s / 2 - 50;
    switch (e) {
        case 0:
            window.open("https://www.facebook.com/sharer/sharer.php?u=" + t, "facebook-share-dialog", "width=" + a + ",height=" + s + ",top=" + i + ",left=" + o);
            break;
        case 1:
            window.open("https://plus.google.com/share?url=" + t, "google-plus-share-dialog", "width=" + a + ",height=" + s + ",top=" + i + ",left=" + o);
            break;
        case 2:
            window.open("https://twitter.com/intent/tweet?status=" + t, "twitter-share-dialog", "width=" + a + ",height=" + s + ",top=" + i + ",left=" + o)
    }
}

function goRequestPage(t) {
    is_login ? window.location.href = t : $("#pop-login").modal("show")
}

function search_suggest() {
    var t = $("input[name=keyword]").val();
    "" !== t.trim() && (t = t.replace(/(<([^>]+)>)/gi, "").replace(/[`~!@#$%^&*()_|\=?;:'",.<>\{\}\[\]\\\/]/gi, ""), t = t.split(" ").join("+"), window.location.href = base_url + "search/" + t + ".html")
}

function load_my_music(t, e) {
    var a;
    a = "undefined" != typeof e ? base_url + "ajax/user/my_music/" + t + "/" + e : base_url + "ajax/user/my_music/" + t, $(".list-my-music").removeClass("active"), "songs" == t ? $("#my-music-songs").addClass("active") : $("#my-music-" + t + "-" + e).addClass("active"), $("#my-music-loading").show(), $("#player-content").empty(), $.ajax({
        url: a,
        type: "GET",
        dataType: "json",
        success: function(t) {
            $("#player-content").html(t.html), $(".song-list").perfectScrollbar(), $("#my-music-loading").hide()
        }
    })
}

function rate_info(t, e) {
    $.ajax({
        url: base_url + "ajax/" + t + "/rate_info/" + e,
        method: "GET",
        dataType: "json",
        success: function(t) {
            $("#rate-info").html(t.html)
        }
    })
}
var base_url = "//" + document.domain + "/",
    is_login = !1;
$.ajax({
    url: base_url + "ajax/user/menu_bar",
    method: "GET",
    dataType: "json",
    success: function(t) {
        t.is_login && (is_login = !0, "" != t.username && null != t.username || ($("#pop-username-creation").modal({
            backdrop: "static",
            keyboard: !1
        }), $("#pop-username-creation").modal("show"))), $("#user-menu-bar").html(t.html)
    }
}), $(document).ready(function() {
    function t() {
        $(this).find(".sub-container").css("display", "block")
    }

    function e() {
        $(this).find(".sub-container").css("display", "none")
    }

    function a(t) {
        if (t.files && t.files[0]) {
            var e = new FileReader;
            e.onload = function(t) {
                $("#preview-image").attr("src", t.target.result)
            }, e.readAsDataURL(t.files[0])
        }
    }
    var s = $(".type-col-list .item");
    if (s.bind("click", function() {
            s.removeClass("item-active"), $(this).toggleClass("item-active")
        }), $(".type-col-list .item").mouseup(function() {
            return !1
        }), $(document).mouseup(function(t) {
            0 == $(t.target).parent(".type-col-list .item, .popover").length && $(".type-col-list .item").removeClass("item-active")
        }), $(".more-toggle").click(function() {
            $(".info .about").toggleClass("active")
        }), $(".view_more_coment").click(function() {
            $(".main_show_comment").toggleClass("active")
		}), $(".txt_view_more").click(function() {
            $(".sub_comment").toggleClass("active")
        }), $(".toggle-lyric").click(function() {
            $(".play-lyric-content").toggleClass("active")
        }), $(".pc-auto").click(function() {
            $(this).toggleClass("disable")
        }), $("#m-menu").click(function() {
            $("#menu, #m-menu").toggleClass("active")
        }), $("#m-search").click(function() {
            $("#search, #m-search").toggleClass("active")
        }), $("#m-playlist").click(function() {
            $(".mmm-wrap .mmm-left ul, #m-playlist, .mmm-wrap").toggleClass("active")
        }), $("header .trick-menu, .xbar-close").click(function() {
            $("#xbar, #wrapper").toggleClass("xmove")
        }), $("#tools-share").click(function() {
            $(this).toggleClass("btn-active"), $("#this-share").toggleClass("block-active"), $("#this-playlist").removeClass("block-active")
        }), $("#tool-cm").click(function() { $(".block_input_comment").toggleClass("block-active")
        }), $("#tool-sharec").click(function() { $(".block_share_cmt_fb").toggleClass("block-active")
        }),
		
            $("#tools-playlist").click(function() {
            $(this).toggleClass("btn-active"), $("#this-playlist").toggleClass("block-active"), $("#this-share").removeClass("block-active")
        }),	$(".xclose").click(function() {
            $(".play-tools .btn.btn-active").removeClass("btn-active"), $(".this-block.block-active").removeClass("block-active")
        }), $(".top-menu> li").bind("mouseover", t), $(".top-menu> li").bind("mouseout", e), $(function() {
            function t() {
                var t = $(this),
                    e = t.find(".modal-dialog");
                t.css("display", "block"), e.css("margin-top", Math.max(0, ($(window).height() - e.height()) / 2))
            }
            $(".modal").on("show.bs.modal", t), $(window).on("resize", function() {
                $(".modal:visible").each(t)
            })
        }), $(function() {
            $("#socialshare").ayoshare(google = !0, stumbleupon = !1, facebook = !0, linkedin = !0, pinterest = !1, bufferapp = !1, reddit = !0, vk = !1, pocket = !1, twitter = !1)
        }), $(".listened-list").length > 0 && $(".listened-list").newsTicker({
            row_height: 52,
            max_rows: 5,
            speed: 600,
            direction: "down",
            duration: 4e3,
            autostart: 1,
            pauseOnHover: 1
        }), $("#slider").length > 0) {
        new Swiper("#slider", {
            pagination: ".swiper-pagination",
            paginationClickable: !0,
            loop: !0,
            autoplay: 4e3
        })
    }
    if ($("#cover").length > 0) {
        var o = $("#cover").Vague({
            intensity: 80
        });
        o.blur(), $(".btn:not(.animate)").on("click", $.proxy(o.toggleblur, o)), $(".btn input").on("keyup blur", function(t) {
            o.animate(+$(t.currentTarget).val(), {
                duration: 800
            }).done(function() {})
        })
    }
    $(".pc-btn, .pc-auto").tooltip(), $(".play-list").length > 0 && $(".play-list").perfectScrollbar(), $(".cs-m-user").length > 0 && $(".cs-m-user").perfectScrollbar(), $(".chatbox-list").length > 0 && $(".chatbox-list").perfectScrollbar(), $(".search-list").length > 0 && $(".search-list").perfectScrollbar(), $(".mmmc-lyric").length > 0 && $(".mmmc-lyric").perfectScrollbar(), $(".my-music-list").length > 0 && $(".my-music-list").perfectScrollbar(), $(".billboard-tab").click(function() {
        $(".billboard-tab").removeClass("btn-active"), $(this).addClass("btn-active")
    }), load_playlist_tool(), $(".it-download").on("shown.bs.popover", function() {
        $(this).addClass("active");
        var t = $(this).attr("data-song-id");
        $.ajax({
            url: base_url + "ajax/song/download/" + t,
            type: "GET",
            dataType: "json",
            success: function(t) {
                $(".popover-content").hide().html(t.html).fadeIn()
            }
        })
    }), $("#my-music").click(function() {
        is_login ? window.location.href = $(this).attr("data-href") : $("#pop-login").modal("show")
    }), $("#selectedFile").change(function() {
        a(this)
    })
}), $("#login-form").submit(function(t) {
    $("#login-submit").prop("disabled", !0), $("#login-loading").show();
    var e = $(this).serializeArray();
    $.ajax({
        url: base_url + "ajax/user/login",
        type: "POST",
        data: e,
        dataType: "json",
        success: function(t) {
            t.status ? window.location.reload() : ($("#login-error").show(), $("#login-error").text(t.message), $("#login-submit").removeAttr("disabled"), $("#login-loading").hide())
        }
    }), t.preventDefault()
}), $("#report-form").submit(function(t) {
    $("#report-submit").prop("disabled", !0), $("#report-loading").show();
    var e = $(this).serializeArray();
    $.ajax({
        url: base_url + "ajax/site/report",
        type: "POST",
        data: e,
        dataType: "json",
        success: function(t) {
            0 == t.status && ($("#report-error").text(t.message), $("#report-error").show(), $("#report-submit").removeAttr("disabled"), $("#report-loading").hide(), grecaptcha.reset()), 1 == t.status && (document.getElementById("report-form").reset(), $("#report-success").show(), $("#report-success").text(t.message), $("#report-form").hide())
        }
    }), t.preventDefault()
}), $("#request-form").submit(function(t) {
    $("#request-submit").prop("disabled", !0), $("#request-loading").show();
    var e = $(this).serializeArray();
    $.ajax({
        url: base_url + "ajax/user/request",
        type: "POST",
        data: e,
        dataType: "json",
        success: function(t) {
            0 == t.status && ($("#request-error").text(t.message), $("#request-error").show(), $("#request-submit").removeAttr("disabled"), $("#request-loading").hide(), grecaptcha.reset()), 1 == t.status && ($("#request-success").show(), $("#request-success").text(t.message), document.getElementById("request-form").reset(), $("#request-form").hide())
        }
    }), t.preventDefault()
}), $("#playlist-form").submit(function(t) {
    $("#playlist-submit").prop("disabled", !0);
    var e = $(this).serializeArray();
    $.ajax({
        url: base_url + "ajax/playlist/add",
        type: "POST",
        data: e,
        dataType: "json",
        success: function(t) {
            t.status ? (get_playlist(), add_to_playlist(t.playlist_id, song.id), document.getElementById("playlist-form").reset()) : alert(t.message), $("#playlist-submit").removeAttr("disabled")
        }
    }), t.preventDefault()
});
var hidden = !0;
$(".search-suggest").mouseover(function() {
    hidden = !1
}), $(".search-suggest").mouseout(function() {
    hidden = !0
}), $("input[name=keyword]").keyup(function() {
    var t = $(this).val();
    t.trim().length > 2 ? $.ajax({
        url: base_url + "ajax/search/suggest",
        type: "POST",
        dataType: "json",
        data: {
            keyword: t
        },
        success: function(t) {
            $(".search-suggest").html(t.html), "" !== t.html.trim() ? $(".search-suggest").show() : $(".search-suggest").hide()
        }
    }) : $(".search-suggest").hide()
}), $("input[name=keyword]").blur(function() {
    hidden && $(".search-suggest").hide()
}), $("input[name=keyword]").focus(function() {
    "" !== $(".search-suggest").html() && $(".search-suggest").show()
}), $("input[name=keyword]").keypress(function(t) {
    13 == t.which && search_suggest()
}), $(".tools-playlist").click(function() {
    if (is_login) {
        $(this).toggleClass("btn-active"), $("#tools-share").removeClass("btn-active"), $("#this-playlist").toggleClass("block-active"), $("#this-share").removeClass("block-active");
        var t = $(this).attr("data-song-id");
        get_playlist(t)
    } else $("#pop-login").modal("show")
}), $(".bb-song-tab").click(function() {
    var t = $(this).attr("data-type");
    if ($("#billboard-" + t).is(":empty")) {
        var e = base_url + "ajax/song/top_playback/" + t;
        $.ajax({
            url: e,
            type: "GET",
            dataType: "json",
            success: function(e) {
                $("#billboard-" + t).html(e.html)
            }
        })
    }
}), $(".bb-album-tab").click(function() {
    var t = $(this).attr("data-type");
    if ($("#billboard-album-" + t).is(":empty")) {
        var e = base_url + "ajax/album/top_playback/" + t;
        $.ajax({
            url: e,
            type: "GET",
            dataType: "json",
            success: function(e) {
                $("#billboard-album-" + t).html(e.html)
            }
        })
    }
}), $(".artist-tab").click(function() {
    var t = $(this).attr("data-type");
    if ($("#artist-" + t).is(":empty")) {
        var e = base_url + "ajax/artist/list/" + t;
        $.ajax({
            url: e,
            type: "GET",
            dataType: "json",
            success: function(e) {
                $("#artist-" + t).html(e.html)
            }
        })
    }
}), $(".album-tab").click(function() {
    var t = $(this).attr("data-type");
    if ($("#album-" + t + " .content").is(":empty")) {
        $("#album-loading").show();
        var e = base_url + "ajax/album/list/" + t;
        $.ajax({
            url: e,
            type: "GET",
            dataType: "json",
            success: function(e) {
                $("#album-" + t + " .content").html(e.html), $("#album-loading").hide()
            }
        })
    }
}), $(".song-tab").click(function() {
    var t = $(this).attr("data-type");
    if ($("#song-" + t).is(":empty")) {
        var e = base_url + "ajax/song/list/" + t;
        $.ajax({
            url: e,
            type: "GET",
            dataType: "json",
            success: function(e) {
                $("#song-" + t).html(e.html)
            }
        })
    }
}), $(".billboard-song-tab").click(function() {
    var t = $(this).attr("data-type"),
        e = base_url + "billboard/" + t + "/play.html";
    $("#btn-play-all").attr("href", e)
}), $(".remove-from-playlist").click(function() {
    var t = confirm("Are you sure remove this song from playlist?");
    if (t) {
        var e = $(this).attr("data-playlist-id"),
            a = $(this).attr("data-id"),
            s = base_url + "ajax/playlist/remove_song";
        $.ajax({
            url: s,
            type: "POST",
            dataType: "json",
            data: {
                playlist_id: e,
                song_id: a
            },
            success: function() {
                $("#song-" + a).remove()
            }
        })
    }
}), $(".remove-from-favorite").click(function() {
    var t = $(this).attr("data-type"),
        e = confirm("Are you sure remove this " + t + " from favorite?");
    if (e) {
        var a = $(this).attr("data-id"),
            s = "remove",
            o = base_url + "ajax/" + t + "/like";
        $.ajax({
            url: o,
            type: "POST",
            dataType: "json",
            data: {
                id: a,
                action: s
            },
            success: function(e) {
                $("#" + t + "-" + a).remove(), $("#message-content").html(e.message), $("#pop-alert").modal("show")
            }
        })
    }
}), $("#contact-from").submit(function(t) {
    $("#contact-submit").prop("disabled", !0);
    var e = $(this).serializeArray();
    $.ajax({
        url: base_url + "ajax/site/send_contact_request",
        type: "POST",
        data: e,
        dataType: "json",
        success: function(t) {
            t.status ? ($("#contact-success").show(), $("#contact-success").text(t.message), $("#contact-from").hide(), $("#contact-cancel").show(), $("#btn-contact-cancel").text("Back to home page")) : ($("#contact-error").show(), $("#contact-error").text(t.message), $("#contact-submit").prop("disabled", !1), grecaptcha.reset())
        }
    }), t.preventDefault()
}), $("#username-creation-form").submit(function(t) {
    $("#username-creation-submit").prop("disabled", !0);
    var e = $(this).serializeArray();
    $.ajax({
        url: base_url + "ajax/user/create_username",
        type: "POST",
        data: e,
        dataType: "json",
        success: function(t) {
            t.status ? $("#pop-username-creation").modal("hide") : ($("#username_creation-error").show(), $("#username_creation-error").html(t.message), $("#username-creation-submit").prop("disabled", !1))
        }
    }), t.preventDefault()
}), $("#forgot-form").submit(function(t) {
    $("#forgot-submit").prop("disabled", !0);
    var e = $(this).serializeArray();
    $.ajax({
        url: base_url + "ajax/user/forgot_password",
        type: "POST",
        data: e,
        dataType: "json",
        success: function(t) {
            t.status ? ($("#forgot-success-message").show(), $("#forgot-success-message").text(t.message)) : ($("#forgot-error-message").show(), $("#forgot-error-message").text(t.message), $("#forgot-submit").prop("disabled", !1))
        }
    }), t.preventDefault()
}), $("#clear-listen-history").click(function() {
    $.ajax({
        url: base_url + "ajax/user/clear_history",
        method: "GET",
        dataType: "json",
        success: function() {
            window.location.reload()
        }
    })
});


$(".verticalCarousel").verticalCarousel({
	currentItem: 1,
	showItems: 4,
});